# -*- coding: utf-8 -*-

# –•–æ—á—É –æ—Å—Ç–∞–≤–∏—Ç—å –±–æ–ª—å—à–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ç–∏–ø–∞ —è –∫—Ä—É—Ç–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç.
# –ú–æ–¥—É–ª—å –±–æ—Ç–∞ –∫–ø–∏ —Ä–∞–¥–∏–æ by –í–ª–∞–¥–∏—Å–ª–∞–≤ –°–≤–∏–Ω–∫–∏–Ω 2–∫!8 t.me/svinerus
# –ù–æ–≤—ã–π –º–æ–¥—É–ª—å bot_utils.py - —Å –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞–º–∏, —Ç–µ–∫—Å—Ç–∞–º–∏ –∏ –∫—É—á–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–π
# –í—Å–µ, —á—Ç–æ –Ω–µ –Ω—É–∂–Ω–æ –≤—ã–∫–ª–∞–¥—ã–≤–∞—Ç—å –≤ –≥–∏—Ç—Ö–∞–± –≤ passwords.py
# –¢–æ–∫–µ–Ω –∏ —á–∞—Ç –∞–¥–º–∏–Ω–æ–≤ —Ç–∞–º!!!!


import telebot
import requests

from db import db
from datetime import datetime
from time import strptime, strftime
from os import listdir
from random import choice
from sys import exit as sys_exit
from subprocess import Popen, CREATE_NEW_CONSOLE

import bot_utils
from passwords import *

if __name__ == '__main__':
    bot = telebot.TeleBot(TOKEN_TEST)
    ADMINS_CHAT_ID = 185520398
else:
    bot = telebot.TeleBot(TOKEN)

bot_me = bot.get_me()
print('–ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∏–∫–∞..', bot_me)


@bot.message_handler(commands=['start', 'help', 'song'])
def start(message):
    if db.find_one({'usr': message.chat.id}) is None:
        db.insert({'usr': message.chat.id})
    if message.chat.id < 0:
        return

    bot.send_message(message.chat.id, bot_utils.CONFIG['start'])
    bot.send_message(message.chat.id, bot_utils.CONFIG['menu'], reply_markup=bot_utils.keyboard_start())


@bot.message_handler(commands=['cancel'])
def moar(message):
    bot.send_message(message.chat.id, bot_utils.CONFIG['menu'], reply_markup=bot_utils.keyboard_start())


@bot.message_handler(commands=['save_pic'])
def save_pic_request(message):
    if message.chat.id == ADMINS_CHAT_ID:
        bot.send_message(message.chat.id, bot_utils.CONFIG['save_pic'], reply_markup=telebot.types.ForceReply())


@bot.message_handler(commands=['update'])
def update(message):
    if message.chat.id != 185520398:
        return
#    Popen(r'update.bat', creationflags=CREATE_NEW_CONSOLE)




@bot.callback_query_handler(func=lambda c: True)
def callback_query_handler(query):
    cmd = query.data.split('-|-')

    # –í—ã–±—Ä–∞–ª –¥–µ–Ω—å, –æ—Ç–ø—Ä–∞–≤–ª—è—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏
    #
    #   cmd[1] = –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å
    #
    if cmd[0] == 'predlozka_day':
        bot.edit_message_caption(
            chat_id=query.message.chat.id, message_id=query.message.message_id,
            caption=bot_utils.CONFIG['days1'][int(cmd[1])] + ', –æ—Ç–ª–∏—á–Ω–æ. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –≤—Ä–µ–º—è',
            reply_markup=bot_utils.keyboard_time(int(cmd[1]))
        )

    # –í—ã–±—Ä–∞–ª –≤—Ä–µ–º—è, –æ—Ç–ø—Ä–∞–≤–ª—è—é —ç—Ç–æ –≤—Å–µ –∞–¥–º–∏–Ω–∞–º
    #
    #   cmd[1] = –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å
    #   cmd[2] = –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
    #
    elif cmd[0] == 'predlozka':
        keyboard = telebot.types.InlineKeyboardMarkup(row_width=2)
        keyboard.add(telebot.types.InlineKeyboardButton(
            text='–ü—Ä–∏–Ω—è—Ç—å',
            callback_data='-|-'.join(['predlozka_answ', 'ok', str(query.message.chat.id), cmd[1], cmd[2]])))
        keyboard.add(telebot.types.InlineKeyboardButton(
            text='–û—Ç–∫–ª–æ–Ω–∏—Ç—å',
            callback_data='-|-'.join(['predlozka_answ', 'neok', str(query.message.chat.id)])))

        t = bot_utils.CONFIG['days1'][int(cmd[1])] + ', '
        if cmd[1] == '6':  # –≤ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –¥–Ω–µ–≤–Ω–æ–π (0) –∏ –≤–µ—á–µ—Ä–Ω–∏–π (1) —ç—Ñ–∏—Ä
            t += '–¥–Ω–µ–º' if cmd[2] == 0 else '–≤–µ—á–µ—Ä–æ–º'
        else:
            t += '–≤–µ—á–µ—Ä–æ–º' if cmd[2] == '5' else '–ø–æ—Å–ª–µ ' + cmd[2] + ' –ø–∞—Ä—ã'
        if int(cmd[1]) == datetime.today().weekday() and int(cmd[2]) == bot_utils.get_break_num():
            t += ' (c–µ–π—á–∞—Å!)'

        bot.send_audio(ADMINS_CHAT_ID, query.message.audio.file_id,
                       '–ù–æ–≤—ã–π –∑–∞–∫–∞–∑, ' + t + bot_utils.get_user_name(query.from_user),
                       reply_markup=keyboard, parse_mode='HTML')
        bot.edit_message_caption(caption=bot_utils.CONFIG['predlozka_moderating'].format(t),
                                 chat_id=query.message.chat.id, message_id=query.message.message_id,
                                 reply_markup=telebot.types.InlineKeyboardMarkup())
        bot.send_message(query.message.chat.id, bot_utils.CONFIG['menu'], reply_markup=bot_utils.keyboard_start())

    # –ê–¥–º–∏–Ω—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–∏–Ω—è—Ç—å\–æ—Ç–º–µ–Ω–∏—Ç—å
    #
    #   cmd[1] = ok –∏–ª–∏ neok
    #   cmd[2] = –∞–π–¥–∏ –∑–∞–∫–∞–∑–∞–≤—à–µ–≥–æ
    #   cmd[3] = –≤—ã–±—Ä–∞–Ω–Ω—ã–π –¥–µ–Ω—å
    #   cmd[4] = –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
    #
    elif cmd[0] == 'predlozka_answ':
        name = str(query.message.audio.performer) + ' - ' + str(query.message.audio.title)
        bot.edit_message_caption(caption=query.message.caption +' - '+cmd[1]+'('+bot_utils.get_user_name(query.from_user)+')',
                                 chat_id=query.message.chat.id, message_id=query.message.message_id,
                                 reply_markup=telebot.types.InlineKeyboardMarkup(), parse_mode='HTML')
        if cmd[1] == 'ok':
            url = 'https://api.telegram.org/file/bot{0}/{1}'.format(
                    TOKEN, bot.get_file(query.message.audio.file_id).file_path)
            to = bot_utils.get_music_path(int(cmd[3]), int(cmd[4])) + name + '.mp3'

            bot_utils.save_file(url, to)
            if int(cmd[3]) == datetime.today().weekday() and int(cmd[4]) == bot_utils.get_break_num():
                bot_utils.radioboss_api(action='inserttrack', filename=to, pos=-2)
                t = bot_utils.CONFIG['predlozka_ok_next'].format(name)
            else:
                t = bot_utils.CONFIG['predlozka_ok'].format(name)
        else:
            t = bot_utils.CONFIG['predlozka_neok'].format(name)

        bot.send_message(int(cmd[2]), t)

    #
    # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –≤—Ä–µ–º–µ–Ω–∏
    elif cmd[0] == 'predlozka_back_day':
        bot.edit_message_caption(
            chat_id=query.message.chat.id, message_id=query.message.message_id,
            caption='–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å', reply_markup=bot_utils.keyboard_day()
        )
    # –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –¥–Ω—è
    elif cmd[0] == 'predlozka_cancel':
        bot.edit_message_caption(
            chat_id=query.message.chat.id, message_id=query.message.message_id,
            caption='–ù—É –æ–∫(', reply_markup=telebot.types.InlineKeyboardMarkup()
        )
        bot.send_message(query.message.chat.id, bot_utils.CONFIG['menu'], reply_markup=bot_utils.keyboard_start())

    # –ö–Ω–æ–ø–∫–∞ "–ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ç—Ä–µ–∫–∏" –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ "—á—Ç–æ –∏–≥—Ä–∞–µ—Ç"
    elif cmd[0] == 'song_played':
        playback = bot_utils.radioboss_api(action='getlastplayed')
        if playback:
            text = ''
            try:
                for i in range(min(5, len(playback))):
                    track = playback[i].attrib
                    text += 'üïñ{0}: {1}\n'.format(track['STARTTIME'].split(' ')[1], track['CASTTITLE'])
#  bot.answer_callback_query(callback_query_id=query.id, text=text, show_alert=True)  # –º–± —Ç–∞–∫ –∫—Ä–∞—Å–∏–≤–µ–µ, —Ö–∑
                bot.send_message(query.message.chat.id, text)
            except:
                pass
        bot.send_message(query.message.chat.id, bot_utils.CONFIG['menu'], reply_markup=bot_utils.keyboard_start())

    # –ö–Ω–æ–ø–∫–∞ –≤–≤–æ–¥–∞ –≤–µ—Ä–º–µ–Ω–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ "—á—Ç–æ –∏–≥—Ä–∞–µ—Ç"
    if cmd[0] == 'song_played_time':
        bot.send_message(query.message.chat.id, bot_utils.CONFIG['what_played_choose_time'],
                         reply_markup=telebot.types.ForceReply())

    bot.answer_callback_query(callback_query_id=query.id)


@bot.message_handler(content_types=['text', 'photo'])
def message_handler(message):
    # –§–æ—Ä—Å —Ä–µ–ø–ª–∞–∏
    if message.reply_to_message and message.reply_to_message.from_user.id == bot_me.id:

        # –û–¥–º–µ–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã
        if message.chat.id == ADMINS_CHAT_ID:

            # –û–¥–º–µ–Ω—ã –æ—Ç–≤–µ—á–∞—é—Ç –Ω–∞ –æ—Ç–∑—ã–≤
            if message.reply_to_message.forward_from:
                bot.send_message(message.reply_to_message.forward_from.id, "–ù–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∏–ª–∏\n"+message.text)

            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–æ–∫
            if message.reply_to_message.text == bot_utils.CONFIG['save_pic']:
                url = 'https://api.telegram.org/file/bot{0}/{1}'.format(
                    TOKEN, bot.get_file(message.photo[0].file_id).file_path)
                bot_utils.save_file(url, bot_utils.CONFIG['pics_path'] + str(message.photo[0].file_size) + '.jpg')

        # –í–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–µ—Å–Ω–∏
        if message.reply_to_message.text == bot_utils.CONFIG['predlozka_choose_song']:
            bot.send_chat_action(message.chat.id, 'upload_audio')
            audio = bot_utils.find_song(message.text)

            if not audio:
                bot.send_message(message.chat.id, '–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–µ–ª( \n–ù–æ —Ç—ã –º–æ–∂–µ—à—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ–µ –∞—É–¥–∏–æ —Å–∞–º!',
                                 reply_markup=bot_utils.keyboard_start())
            else:
                try:
                    audio_file = requests.get(audio['download'], stream=True).raw
                    bot.send_audio(message.chat.id, audio_file, ' (–∏–ª–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π –Ω–∞–∑–≤–∞–Ω–∏–µ)',
                                   performer=audio['artist'], title=audio['title'],
                                   reply_markup=bot_utils.keyboard_day())

                except Exception as e:
                    print('Error: loading audio!', e)
                    bot.send_message(message.chat.id, bot_utils.CONFIG['error'],
                                     reply_markup=bot_utils.keyboard_start())

        # –ó–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –∫–æ–º–∞–Ω–¥—É
        if message.reply_to_message.text == bot_utils.CONFIG['feedback']:
            bot.send_message(message.chat.id, bot_utils.CONFIG['feedback_thanks'], reply_markup=bot_utils.keyboard_start())
            bot.forward_message(ADMINS_CHAT_ID, message.chat.id, message.message_id)

        # –í—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–µ—Å–Ω–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
        if message.reply_to_message.text == bot_utils.CONFIG['what_played_choose_time']:
            try:
                dt = strptime(message.text, '%H:%M')
                user_time = dt.tm_hour*60+dt.tm_min
            except:
                bot.send_message(message.chat.id, "–ü–æ—Ö–æ–∂–µ, —á—Ç–æ –≤—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–ø–∏—Å–∞–ª–∏ –≤—Ä–µ–º—è :)")
            
            playback = bot_utils.radioboss_api(action='getlastplayed')
            if playback:
                text = ''
                old_day = 0
                try:
                    for i in range(min(100, len(playback))):
                        track = playback[i].attrib
                        dt = strptime(track['STARTTIME'], '%Y-%m-%d %H:%M:%S')
                        time = dt.tm_hour * 60 + dt.tm_min
                        
                        if abs(time - user_time) < 10:
                            if dt.tm_mday != old_day:
                                text += "\nüìÖ{0}".format(strftime("%d.%m", dt))
                                old_day = dt.tm_mday
                            text += "\nüïì{0}: {1}".format(strftime("%H:%M", dt), track['CASTTITLE'])
                    if text:
                        bot.send_message(message.chat.id, text)
                    else:
                        bot.send_message(message.chat.id, '–í–∏–¥–∏–º–æ, –≤ —ç—Ç–æ –≤—Ä–µ–º—è –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–ª–æ')
                except Exception as e:
                    print(e)
        return

    if message.chat.id < 0:
        return

    # –ö–Ω–æ–ø–∫–∏

    # –ö–Ω–æ–ø–∫–∞ '–ß—Ç–æ –∏–≥—Ä–∞–µ—Ç?'
    if message.text == bot_utils.btn['what_playing']:
        keyboard = telebot.types.InlineKeyboardMarkup(row_width=2)
        keyboard.add(*[telebot.types.InlineKeyboardButton(text='–ü—Ä–µ–¥—ã–¥—É—â–∏–µ —Ç—Ä–µ–∫–∏', callback_data='song_played'),
                telebot.types.InlineKeyboardButton(text='–ü–æ–∏—Å–∫ –ø–µ—Å–Ω–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏', callback_data='song_played_time')])

        playback = bot_utils.radioboss_api(action='playbackinfo')
        if playback:
            try:
                if playback[3].attrib['state'] == 'stop':
                    bot.send_message(message.chat.id, "–ù–∏—á–µ–≥–æ", reply_markup=keyboard)
                else:
                    bot.send_message(message.chat.id,
                                     '‚èÆ *–ü—Ä–µ–¥—ã–¥—É—â–∏–π —Ç—Ä–µ–∫: *' + playback[0][0].attrib['CASTTITLE'] +
                                     '\n‚ñ∂Ô∏è *–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç: *' + playback[1][0].attrib['CASTTITLE'] +
                                     '\n‚è≠ *–°–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫: *' + playback[2][0].attrib['CASTTITLE'],
                                     parse_mode='Markdown', reply_markup=keyboard)
            except Exception as e:
                print('Error! what playing', e)
                bot.send_message(message.chat.id, '–ù–∏—á–µ–≥–æ', reply_markup=keyboard)
        else:
            bot.send_message(message.chat.id, '–ù–µ –∑–Ω–∞—é(')

    # –ö–Ω–æ–ø–∫–∞ '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–µ—Å–Ω—é'
    elif message.text == bot_utils.btn['predlozka']:
        bot.send_message(message.chat.id, bot_utils.CONFIG['predlozka_choose_song'],
                         reply_markup=telebot.types.ForceReply())

    # –ö–Ω–æ–ø–∫–∞ '–•–æ—á—É –≤ –∫–æ–º–∞–Ω–¥—É'
    elif message.text == bot_utils.btn['feedback_v_komandu']:
        bot.send_message(message.chat.id, bot_utils.CONFIG['feedback'], reply_markup=telebot.types.ForceReply())

    # –ö–Ω–æ–ø–∫–∞ '–ü–æ–∫–∞–∂–∏ —Ä–∞–¥–∏–æ'
    elif message.text == bot_utils.btn['pokazhi']:
        try:
            pics = listdir(bot_utils.CONFIG['pics_path'])
            pic = open(bot_utils.CONFIG['pics_path'] + choice(pics), 'rb')
            bot.send_photo(message.chat.id, pic)
        except Exception as e:
            print('Error: send pic!', e)
            bot.send_message(message.chat.id, bot_utils.CONFIG['error'])

    else:
        bot.send_message(message.chat.id, '–®–æ —Ç—ã —Ö–æ—à?', reply_markup=bot_utils.keyboard_start())


@bot.message_handler(content_types=['audio'])
def message_width_audio(message):
    bot.send_audio(message.chat.id, message.audio.file_id, '–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –¥–µ–Ω—å', reply_markup=bot_utils.keyboard_day())


@bot.edited_message_handler(func=lambda message: True)
def edited_message(message):
    if message.reply_to_message is None:
        return
    if message.reply_to_message.text == bot_utils.CONFIG['predlozka_choose_song'] or \
       message.reply_to_message.text == bot_utils.CONFIG['what_played_choose_time']:
        message_handler(message)


if __name__ == '__main__':
    bot.polling(none_stop=True)
